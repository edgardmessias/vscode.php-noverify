name: test

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

jobs:
  test:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
        version: ["1.41.0", "stable", "insiders"]
    env:
      MOCHA_COLORS: 1
      MOCHA_REPORTER: "mocha-github-actions-reporter"
    runs-on: ${{ matrix.os }}-latest
    name: ${{ matrix.os }} (VSCode ${{ matrix.version }})
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 10.x

      - name: Install GoLang
        uses: actions/setup-go@v2

      - name: Setup Go ENV
        run: |
          echo "::set-env name=GOPATH::$(go env GOPATH)"
          echo "::add-path::$(go env GOPATH)/bin"
        shell: bash

      - name: Install NoVerify
        run: go get -u github.com/VKCOM/noverify

      - name: Install Dependencies
        run: npm ci

      - name: Enable full coverage
        run: sed -i.bak 's/"\*"//g' package.json
        shell: bash

      - name: Cache VSCode binary
        id: cache-vscode
        uses: actions/cache@v1
        with:
          path: .vscode-test
          key: vscode-${{ runner.os }}-${{ matrix.version }}-${{ github.run_id }}
          restore-keys: |
            vscode-${{ runner.os }}-${{ matrix.version }}-
            vscode-${{ runner.os }}-

      - name: Run tests
        uses: GabrielBB/xvfb-action@v1.0
        with:
          run: npm test
        env:
          CODE_VERSION: ${{ matrix.version }}
        continue-on-error: ${{ matrix.version == 'insiders' }}

      - name: Upload coverage
        run: |
          cover() {
            curl -s https://codecov.io/bash -o codecov.sh
            bash codecov.sh -X gcov -f ./coverage/coverage-final.json -f ./coverage/lcov.info
          }
          for i in {1..5}; do cover && break || sleep 5; done
        shell: bash
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          CODECOV_NAME: ${{ matrix.os }} ${{ matrix.version }}

      - name: Remove old versions of VSCode
        run: ls -1 -d .vscode-test/vscode-* | sed -e '$ d' | xargs -I {} rm -rf {} || true
        shell: bash

  artifact:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: npm install

      - name: Update changelog with unreleased changes
        run: npm run changelog:update -- -u

      - name: Package extension
        uses: lannonbr/vsce-action@master
        with:
          args: "package -o php-noverify.vsix"

      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: "php-noverify-${{ github.sha }}.vsix"
          path: "php-noverify.vsix"
